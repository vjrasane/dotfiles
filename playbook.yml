- name: Bootstrap
  hosts: 127.0.0.1
  connection: local
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Install packages
      become: yes
      ansible.builtin.package:
        name: 
          - zsh
          - gcc
          - build-essential
          - libssl-dev
          - git
          - curl
          - ca-certificates
          - gnupg
          - lsb-release
        state: present
        update_cache: yes
    - name: Create directory for Docker's GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    - name: Add Docker's official GPG key
      become: true
      ansible.builtin.apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /usr/share/keyrings/docker.gpg
        state: present
    - name: Add Docker repository
      become: true
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
          signed-by=/usr/share/keyrings/docker.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        filename: docker
        state: present
    - name: Install Docker and related packages
      become: true
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
    - name: Add Docker group
      ansible.builtin.group:
        name: docker
        state: present
    - name: Add user to Docker group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true
    - name: Enable and start Docker services
      ansible.builtin.systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service
    - name: Install nvm
      ansible.builtin.shell:
        cmd: curl https://raw.githubusercontent.com/creationix/nvm/v0.40.1/install.sh | bash
        creates: /home/{{ ansible_user_id }}/.nvm/nvm.sh 
    - name: Install node
      ansible.builtin.shell:
        cmd: . ~/.nvm/nvm.sh && nvm install 20.17.0
        creates: /home/{{ ansible_user_id }}/.nvm/versions/node/v20.17.0
    - name: Download Oh My Zsh install script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh 
        dest: /tmp/install-ohmyzsh.sh
    - name: Run Oh My Zsh install script
      ansible.builtin.shell:
        cmd: sh /tmp/install-ohmyzsh.sh --unattended
      register: ohmyzsh
      failed_when: "'FAILED' in ohmyzsh.stderr"
