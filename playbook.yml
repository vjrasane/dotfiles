- name: Bootstrap
  hosts: 127.0.0.1
  gather_facts: true
  gather_subset:
    - "!all"
    - "min"
  connection: local
  vars:
    arch_mapping:  # Map ansible architecture {{ ansible_architecture }} names to Docker's architecture names
      x86_64: amd64
      aarch64: arm64
  tasks:
    - name: Show Facts
      debug:
        msg: "{{ ansible_facts }}"
    - name: Install packages
      become: yes
      apt:
        name: 
          - zsh
          - ripgrep
          - gcc
          - build-essential
          - libssl-dev
          - git
          - curl
          - ca-certificates
          - gpg
          - gnupg
          - lsb-release
          - zip
          - unzip
          - systemd
          - podman
          - vim
          - stow
          - bat
          - fd-find
        state: present
        update_cache: yes

    - name: Create directory for Docker's GPG key
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'
    - name: Add Docker's official GPG key
      become: true
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        keyring: /usr/share/keyrings/docker.gpg
        state: present
    - name: Add Docker repository
      become: true
      apt_repository:
        repo: >-
          deb [arch={{ arch_mapping[ansible_architecture] | default(ansible_architecture) }}
          signed-by=/usr/share/keyrings/docker.gpg]
          https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        filename: docker
        state: present
    - name: Install Docker and related packages
      become: true
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
    - name: Add Docker group
      group:
        name: docker
        state: present
    - name: Add user to Docker group
      become: true
      user:
        name: "{{ ansible_user_id }}"
        groups: docker
        append: true
    - name: Check systemd available
      shell: systemctl 
      register: systemctl
      changed_when: false
      ignore_errors: true
    - name: Enable and start Docker services
      systemd:
        name: "{{ item }}"
        enabled: true
        state: started
      loop:
        - docker.service
        - containerd.service
      when: systemctl.rc == 0

    - name: Install nvm
      shell:
        cmd: curl https://raw.githubusercontent.com/creationix/nvm/v0.40.1/install.sh | bash
        creates: /home/{{ ansible_user_id }}/.nvm/nvm.sh 
    - name: Install node
      shell:
        cmd: . ~/.nvm/nvm.sh && nvm install 20.17.0
        creates: /home/{{ ansible_user_id }}/.nvm/versions/node/v20.17.0
      environment:
        NVM_DIR: /home/{{ ansible_user_id }}/.nvm
        
    - name: Download Oh My Zsh install script
      get_url:
        url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh 
        dest: /tmp/install-ohmyzsh.sh
    - name: Run Oh My Zsh install script
      shell: 
        cmd: sh /tmp/install-ohmyzsh.sh --unattended
        creates: /home/{{ ansible_user_id }}/.oh-my-zsh
      register: ohmyzsh
      failed_when: "'FAILED' in ohmyzsh.stderr"
    - name: Download Antigen
      get_url:
        url: https://git.io/antigen 
        dest: /home/{{ansible_user_id}}/antigen.zsh

    - name: Clone dotfiles
      git:
        repo: git@github.com:vjrasane/dotfiles.git
        dest: /home/{{ ansible_user_id }}/.dotfiles
        accept_hostkey: true
      register: dotfiles_clone
      failed_when:
        - dotfiles_clone.failed
        - not 'Local modifications exist' in dotfiles_clone.msg
    - name: Check if .zshrc is symlink
      stat:
        path: /home/{{ ansible_user_id }}/.zshrc 
      register: zshrc_stat
      changed_when: false
    - name: Remove default .zshrc
      file:
        path: /home/{{ ansible_user_id }}/.zshrc 
        state: absent
      when: not zshrc_stat.stat.islnk 
    - name: Run Stow
      shell:
        chdir: /home/{{ ansible_user_id }}/.dotfiles
        cmd: stow .
        creates: /home/{{ ansible_user_id }}/.zshrc

    - name: Unpack Neovim
      unarchive:
        src: https://github.com/neovim/neovim/releases/latest/download/nvim-linux64.tar.gz
        dest: /opt
        remote_src: true

    - name: Clone fzf
      git:
        repo: https://github.com/junegunn/fzf.git
        dest: /home/{{ansible_user_id}}/.fzf
        depth: 1
    - name: Install fzf
      shell: 
        cmd: /home/{{ansible_user_id}}/.fzf/install
        creates: /home/{{ansible_user_id}}/.fzf.zsh
    - name: Clone fzf-git
      git:
        repo: https://github.com/junegunn/fzf-git.sh.git
        dest: /home/{{ansible_user_id}}/fzf-git.sh
        depth: 1
    - name: Clone docker-fzf
      git:
        repo: https://github.com/mnowotnik/docker-fzf-completion.git
        dest: /home/{{ansible_user_id}}/docker-fzf

    - name: Install zoxide
      shell: 
        cmd: curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh
        creates: /home/{{ansible_user_id}}/.local/bin/zoxide

    - name: Create local bin directory
      file:
        path: /home/{{ ansible_user_id }}/.local/bin
        state: directory
    - name: Check if batcat exists
      stat:
        path: /usr/bin/batcat
      register: batcat_stat
    - name: Setup bat -> batcat symlink
      become: true
      file: 
        src: /usr/bin/batcat
        dest: /home/{{ ansible_user_id }}/.local/bin/bat
        state: link
      when: batcat_stat.stat.exists

    - name: Download Git Delta
      get_url:
        url: https://github.com/dandavison/delta/releases/download/0.18.2/git-delta_0.18.2_amd64.deb
        dest: /tmp/git-delta_0.18.2_amd64.deb
    - name: Install Git Delta
      become: true
      shell: 
        cmd: dpkg -i /tmp/git-delta_0.18.2_amd64.deb
        creates: /usr/bin/delta

    - name: Download Cargo install script
      get_url:
        url: https://sh.rustup.rs 
        dest: /tmp/cargoinstall.sh
        mode: 'u+rwx'
    - name: Install Cargo
      shell:
        cmd: /tmp/cargoinstall.sh -y
        creates: /home/{{ ansible_user_id }}/.cargo
    
    - name: Install eza
      shell:
        cmd: /home/{{ ansible_user_id }}/.cargo/bin/cargo install eza
        creates: /home/{{ ansible_user_id }}/.cargo/bin/eza

    - name: Setup fdfind -> fd symlink
      become: true
      file: 
        src: /usr/bin/fdfind
        dest: /home/{{ ansible_user_id }}/.local/bin/fd
        state: link
